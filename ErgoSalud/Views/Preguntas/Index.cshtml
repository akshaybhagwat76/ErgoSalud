@model IEnumerable<ErgoSalud.Models.ERGOS_Preguntas_N01>

@{
    ViewBag.Title = "Index";
}
@section stripe{

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');
        var elements = stripe.elements();

        var card = elements.create('card', {
            iconStyle: 'solid',
            style: {
                base: {
                    iconColor: '#8898AA',
                    color: 'white',
                    lineHeight: '36px',
                    fontWeight: 300,
                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                    fontSize: '19px',

                    '::placeholder': {
                        color: '#8898AA',
                    },
                },
                invalid: {
                    iconColor: '#e85746',
                    color: '#e85746',
                }
            },
            classes: {
                focus: 'is-focused',
                empty: 'is-empty',
            },
        });
        card.mount('#card-element');

        var inputs = document.querySelectorAll('input.field');
        Array.prototype.forEach.call(inputs, function (input) {
            input.addEventListener('focus', function () {
                input.classList.add('is-focused');
            });
            input.addEventListener('blur', function () {
                input.classList.remove('is-focused');
            });
            input.addEventListener('keyup', function () {
                if (input.value.length === 0) {
                    input.classList.add('is-empty');
                } else {
                    input.classList.remove('is-empty');
                }
            });
        });

        function setOutcome(result) {
            var successElement = document.querySelector('.success');
            var errorElement = document.querySelector('.error');
            successElement.classList.remove('visible');
            errorElement.classList.remove('visible');

            if (result.token) {
                // Use the token to create a charge or a customer
                // https://stripe.com/docs/charges
                successElement.querySelector('.token').textContent = result.token.id;
                successElement.classList.add('visible');
            } else if (result.error) {
                errorElement.textContent = result.error.message;
                errorElement.classList.add('visible');
            }
        }

        card.on('change', function (event) {
            setOutcome(event);
        });

        document.querySelector('form').addEventListener('submit', function (e) {
            e.preventDefault();
            var form = document.querySelector('form');
            var extraDetails = {
                name: form.querySelector('input[name=cardholder-name]').value,
            };
            stripe.createToken(card, extraDetails).then(setOutcome);
        });
    </script>
}
<h2>Orden de Pago</h2>
<form>
    <label>
        <input name="cardholder-name" class="field is-empty" placeholder="Jane Doe" />
        <span><span>Name</span></span>
    </label>
    <label>
        <input class="field is-empty" type="tel" placeholder="(123) 456-7890" />
        <span><span>Phone number</span></span>
    </label>
    <label>
        <div id="card-element" class="field is-empty"></div>
        <span><span>Credit or debit card</span></span>
    </label>
    <button type="submit">Pay $25</button>
    <div class="outcome">
        <div class="error" role="alert"></div>
        <div class="success">
            Success! Your Stripe token is <span class="token"></span>
        </div>
    </div>
</form>


<h2>Preguntas</h2>
<p>
    @Html.ActionLink("Agregar Pregunta", "Create", null, new { @class = "btn btn-success" })
</p>
<table class="table">
    <tr>

        <th>
            @Html.DisplayName("No Pregunta")
        </th>
        <th>
            @Html.DisplayName("Pregunta")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ERGOS_Cuestionarios_N01.Cuestionario)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td align="center">
                @Html.DisplayFor(modelItem => item.No_Pregunta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preguntas)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ERGOS_Cuestionarios_N01.Cuestionario)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id_pregunta }) |
                @Html.ActionLink("Details", "Details", new { id = item.id_pregunta }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id_pregunta })
            </td>
        </tr>
    }

</table>
